// Code generated by main.go. DO NOT EDIT.

package ptr

func DerefBool(a *bool, b bool) bool {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefBool(a bool) *bool { return &a }

func DerefString(a *string, b string) string {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefString(a string) *string { return &a }

func DerefInt(a *int, b int) int {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefInt(a int) *int { return &a }

func DerefInt8(a *int8, b int8) int8 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefInt8(a int8) *int8 { return &a }

func DerefInt16(a *int16, b int16) int16 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefInt16(a int16) *int16 { return &a }

func DerefInt32(a *int32, b int32) int32 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefInt32(a int32) *int32 { return &a }

func DerefInt64(a *int64, b int64) int64 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefInt64(a int64) *int64 { return &a }

func DerefUint(a *uint, b uint) uint {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefUint(a uint) *uint { return &a }

func DerefUint8(a *uint8, b uint8) uint8 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefUint8(a uint8) *uint8 { return &a }

func DerefUint16(a *uint16, b uint16) uint16 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefUint16(a uint16) *uint16 { return &a }

func DerefUint32(a *uint32, b uint32) uint32 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefUint32(a uint32) *uint32 { return &a }

func DerefUint64(a *uint64, b uint64) uint64 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefUint64(a uint64) *uint64 { return &a }

func DerefUintptr(a *uintptr, b uintptr) uintptr {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefUintptr(a uintptr) *uintptr { return &a }

func DerefByte(a *byte, b byte) byte {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefByte(a byte) *byte { return &a }

func DerefRune(a *rune, b rune) rune {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefRune(a rune) *rune { return &a }

func DerefFloat32(a *float32, b float32) float32 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefFloat32(a float32) *float32 { return &a }

func DerefFloat64(a *float64, b float64) float64 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefFloat64(a float64) *float64 { return &a }

func DerefComplex64(a *complex64, b complex64) complex64 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefComplex64(a complex64) *complex64 { return &a }

func DerefComplex128(a *complex128, b complex128) complex128 {
	if a != nil {
		return *a
	} else {
		return b
	}
}

func RefComplex128(a complex128) *complex128 { return &a }
